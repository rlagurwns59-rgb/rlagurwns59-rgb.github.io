{"version":3,"file":"js/847.7bde0379.js","mappings":"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","sources":["webpack://portfolio-front/../../../src/components/VGrid/VRow.ts","webpack://portfolio-front/../../../src/components/VGrid/VCol.ts","webpack://portfolio-front/./src/views/AboutView.vue","webpack://portfolio-front/./src/views/AboutView.vue?d56f","webpack://portfolio-front/../../../src/components/VGrid/VContainer.tsx"],"sourcesContent":["// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { breakpoints } from '@/composables/display'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\nimport type { Breakpoint } from '@/composables/display'\n\nconst ALIGNMENT = ['start', 'end', 'center'] as const\n\ntype BreakpointAlign = `align${Capitalize<Breakpoint>}`\ntype BreakpointJustify = `justify${Capitalize<Breakpoint>}`\ntype BreakpointAlignContent = `alignContent${Capitalize<Breakpoint>}`\n\nconst SPACE = ['space-between', 'space-around', 'space-evenly'] as const\n\nfunction makeRowProps <\n  Name extends BreakpointAlign | BreakpointJustify | BreakpointAlignContent,\n  Type,\n> (prefix: string, def: () => Prop<Type, null>) {\n  return breakpoints.reduce((props, val) => {\n    const prefixKey = prefix + capitalize(val) as Name\n    props[prefixKey] = def()\n    return props\n  }, {} as Record<Name, Prop<Type, null>>)\n}\n\nconst ALIGN_VALUES = [...ALIGNMENT, 'baseline', 'stretch'] as const\ntype AlignValue = typeof ALIGN_VALUES[number]\nconst alignValidator = (str: any) => ALIGN_VALUES.includes(str)\nconst alignProps = makeRowProps<BreakpointAlign, AlignValue>('align', () => ({\n  type: String as PropType<AlignValue>,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst JUSTIFY_VALUES = [...ALIGNMENT, ...SPACE] as const\ntype JustifyValue = typeof JUSTIFY_VALUES[number]\nconst justifyValidator = (str: any) => JUSTIFY_VALUES.includes(str)\nconst justifyProps = makeRowProps<BreakpointJustify, JustifyValue>('justify', () => ({\n  type: String as PropType<JustifyValue>,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst ALIGN_CONTENT_VALUES = [...ALIGNMENT, ...SPACE, 'stretch'] as const\ntype AlignContentValue = typeof ALIGN_CONTENT_VALUES[number]\nconst alignContentValidator = (str: any) => ALIGN_CONTENT_VALUES.includes(str)\nconst alignContentProps = makeRowProps<BreakpointAlignContent, AlignContentValue>('alignContent', () => ({\n  type: String as PropType<AlignContentValue>,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nexport const makeVRowProps = propsFactory({\n  dense: Boolean,\n  noGutters: Boolean,\n  align: {\n    type: String as PropType<typeof ALIGN_VALUES[number]>,\n    default: null,\n    validator: alignValidator,\n  },\n  ...alignProps,\n  justify: {\n    type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n    default: null,\n    validator: justifyValidator,\n  },\n  ...justifyProps,\n  alignContent: {\n    type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n    default: null,\n    validator: alignContentValidator,\n  },\n\n  ...alignContentProps,\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VRow')\n\nexport const VRow = genericComponent()({\n  name: 'VRow',\n\n  props: makeVRowProps(),\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'v-row--no-gutters': props.noGutters,\n        'v-row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: [\n        'v-row',\n        classes.value,\n        props.class,\n      ],\n      style: props.style,\n    }, slots.default?.())\n  },\n})\n\nexport type VRow = InstanceType<typeof VRow>\n","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { breakpoints } from '@/composables/display'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\nimport type { Breakpoint } from '@/composables/display'\n\ntype BreakpointOffset = `offset${Capitalize<Breakpoint>}`\ntype BreakpointOrder = `order${Capitalize<Breakpoint>}`\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Record<Breakpoint, Prop<boolean | string | number, false>>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const offsetKey = ('offset' + capitalize(val)) as BreakpointOffset\n    props[offsetKey] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<BreakpointOffset, Prop<string | number, null>>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const orderKey = ('order' + capitalize(val)) as BreakpointOrder\n    props[orderKey] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<BreakpointOrder, Prop<string | number, null>>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className: string = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  if (type === 'col') {\n    className = 'v-' + className\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'] as const\n\nexport const makeVColProps = propsFactory({\n  cols: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  ...breakpointProps,\n  offset: {\n    type: [String, Number],\n    default: null,\n  },\n  ...offsetProps,\n  order: {\n    type: [String, Number],\n    default: null,\n  },\n  ...orderProps,\n  alignSelf: {\n    type: String as PropType<typeof ALIGN_SELF_VALUES[number]>,\n    default: null,\n    validator: (str: any) => ALIGN_SELF_VALUES.includes(str),\n  },\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VCol')\n\nexport const VCol = genericComponent()({\n  name: 'VCol',\n\n  props: makeVColProps(),\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'))\n\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: [\n        classes.value,\n        props.class,\n      ],\n      style: props.style,\n    }, slots.default?.())\n  },\n})\n\nexport type VCol = InstanceType<typeof VCol>\n","<template>\n  <v-main class=\"px-8 py-16\">\n    <v-container class=\"text-center\">\n      <v-row justify=\"center\">\n          <v-col cols=\"12\" md=\"8\">\n            <h1 class=\"display-1 font-weight-bold mb-6\">PORTFOLIO.</h1>\n            <p class=\"subtitle-1 mb-12\">\n              I’m a designer & developer crafting clean interfaces with attention to detail and typography.\n            </p>\n          </v-col>\n        </v-row>\n        <v-row justify=\"center\" class=\"mt-12\">\n          <v-col cols=\"12\" md=\"4\">\n            <v-btn large color=\"primary\" class=\"white--text\">\n              View My Work\n            </v-btn>\n          </v-col>\n        </v-row>\n    </v-container>\n  </v-main>\n</template>\n","import { render } from \"./AboutView.vue?vue&type=template&id=132ba4f6\"\nconst script = {}\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useRtl } from '@/composables/locale'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVContainerProps = propsFactory({\n  fluid: {\n    type: Boolean,\n    default: false,\n  },\n\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeTagProps(),\n}, 'VContainer')\n\nexport const VContainer = genericComponent()({\n  name: 'VContainer',\n\n  props: makeVContainerProps(),\n\n  setup (props, { slots }) {\n    const { rtlClasses } = useRtl()\n    const { dimensionStyles } = useDimension(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-container',\n          { 'v-container--fluid': props.fluid },\n          rtlClasses.value,\n          props.class,\n        ]}\n        style={[\n          dimensionStyles.value,\n          props.style,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VContainer = InstanceType<typeof VContainer>\n"],"names":["ALIGNMENT","SPACE","makeRowProps","prefix","def","breakpoints","reduce","props","val","prefixKey","capitalize","ALIGN_VALUES","alignValidator","str","includes","alignProps","type","String","default","validator","JUSTIFY_VALUES","justifyValidator","justifyProps","ALIGN_CONTENT_VALUES","alignContentValidator","alignContentProps","propMap","align","Object","keys","justify","alignContent","classMap","breakpointClass","prop","className","breakpoint","replace","toLowerCase","makeVRowProps","propsFactory","dense","Boolean","noGutters","makeComponentProps","makeTagProps","VRow","genericComponent","name","setup","_ref","slots","classes","computed","classList","forEach","value","push","h","tag","class","style","breakpointProps","Number","offsetProps","offsetKey","orderProps","orderKey","col","offset","order","ALIGN_SELF_VALUES","makeVColProps","cols","alignSelf","VCol","hasColClasses","some","startsWith","_createBlock","_component_v_main","_createVNode","_component_v_container","_component_v_row","_component_v_col","md","_cache","_createElementVNode","_component_v_btn","large","color","script","__exports__","render","makeVContainerProps","fluid","makeDimensionProps","VContainer","rtlClasses","useRtl","dimensionStyles","useDimension","useRender","_normalizeClass","_normalizeStyle"],"sourceRoot":""}