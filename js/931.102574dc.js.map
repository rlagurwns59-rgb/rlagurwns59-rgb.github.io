{"version":3,"file":"js/931.102574dc.js","mappings":"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","sources":["webpack://portfolio-front/../../../src/components/VGrid/VCol.ts","webpack://portfolio-front/../../../src/components/VGrid/VRow.ts","webpack://portfolio-front/../../../src/components/VSkeletonLoader/VSkeletonLoader.tsx","webpack://portfolio-front/./src/views/project/ProjectListView.vue","webpack://portfolio-front/./src/views/project/ProjectListView.vue?1bee"],"sourcesContent":["// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { breakpoints } from '@/composables/display'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\nimport type { Breakpoint } from '@/composables/display'\n\ntype BreakpointOffset = `offset${Capitalize<Breakpoint>}`\ntype BreakpointOrder = `order${Capitalize<Breakpoint>}`\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Record<Breakpoint, Prop<boolean | string | number, false>>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const offsetKey = ('offset' + capitalize(val)) as BreakpointOffset\n    props[offsetKey] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<BreakpointOffset, Prop<string | number, null>>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const orderKey = ('order' + capitalize(val)) as BreakpointOrder\n    props[orderKey] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<BreakpointOrder, Prop<string | number, null>>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className: string = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  if (type === 'col') {\n    className = 'v-' + className\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'] as const\n\nexport const makeVColProps = propsFactory({\n  cols: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  ...breakpointProps,\n  offset: {\n    type: [String, Number],\n    default: null,\n  },\n  ...offsetProps,\n  order: {\n    type: [String, Number],\n    default: null,\n  },\n  ...orderProps,\n  alignSelf: {\n    type: String as PropType<typeof ALIGN_SELF_VALUES[number]>,\n    default: null,\n    validator: (str: any) => ALIGN_SELF_VALUES.includes(str),\n  },\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VCol')\n\nexport const VCol = genericComponent()({\n  name: 'VCol',\n\n  props: makeVColProps(),\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'))\n\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: [\n        classes.value,\n        props.class,\n      ],\n      style: props.style,\n    }, slots.default?.())\n  },\n})\n\nexport type VCol = InstanceType<typeof VCol>\n","// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { breakpoints } from '@/composables/display'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\nimport type { Breakpoint } from '@/composables/display'\n\nconst ALIGNMENT = ['start', 'end', 'center'] as const\n\ntype BreakpointAlign = `align${Capitalize<Breakpoint>}`\ntype BreakpointJustify = `justify${Capitalize<Breakpoint>}`\ntype BreakpointAlignContent = `alignContent${Capitalize<Breakpoint>}`\n\nconst SPACE = ['space-between', 'space-around', 'space-evenly'] as const\n\nfunction makeRowProps <\n  Name extends BreakpointAlign | BreakpointJustify | BreakpointAlignContent,\n  Type,\n> (prefix: string, def: () => Prop<Type, null>) {\n  return breakpoints.reduce((props, val) => {\n    const prefixKey = prefix + capitalize(val) as Name\n    props[prefixKey] = def()\n    return props\n  }, {} as Record<Name, Prop<Type, null>>)\n}\n\nconst ALIGN_VALUES = [...ALIGNMENT, 'baseline', 'stretch'] as const\ntype AlignValue = typeof ALIGN_VALUES[number]\nconst alignValidator = (str: any) => ALIGN_VALUES.includes(str)\nconst alignProps = makeRowProps<BreakpointAlign, AlignValue>('align', () => ({\n  type: String as PropType<AlignValue>,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst JUSTIFY_VALUES = [...ALIGNMENT, ...SPACE] as const\ntype JustifyValue = typeof JUSTIFY_VALUES[number]\nconst justifyValidator = (str: any) => JUSTIFY_VALUES.includes(str)\nconst justifyProps = makeRowProps<BreakpointJustify, JustifyValue>('justify', () => ({\n  type: String as PropType<JustifyValue>,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst ALIGN_CONTENT_VALUES = [...ALIGNMENT, ...SPACE, 'stretch'] as const\ntype AlignContentValue = typeof ALIGN_CONTENT_VALUES[number]\nconst alignContentValidator = (str: any) => ALIGN_CONTENT_VALUES.includes(str)\nconst alignContentProps = makeRowProps<BreakpointAlignContent, AlignContentValue>('alignContent', () => ({\n  type: String as PropType<AlignContentValue>,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nexport const makeVRowProps = propsFactory({\n  dense: Boolean,\n  noGutters: Boolean,\n  align: {\n    type: String as PropType<typeof ALIGN_VALUES[number]>,\n    default: null,\n    validator: alignValidator,\n  },\n  ...alignProps,\n  justify: {\n    type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n    default: null,\n    validator: justifyValidator,\n  },\n  ...justifyProps,\n  alignContent: {\n    type: String as PropType<typeof ALIGN_CONTENT_VALUES[number]>,\n    default: null,\n    validator: alignContentValidator,\n  },\n\n  ...alignContentProps,\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VRow')\n\nexport const VRow = genericComponent()({\n  name: 'VRow',\n\n  props: makeVRowProps(),\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'v-row--no-gutters': props.noGutters,\n        'v-row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: [\n        'v-row',\n        classes.value,\n        props.class,\n      ],\n      style: props.style,\n    }, slots.default?.())\n  },\n})\n\nexport type VRow = InstanceType<typeof VRow>\n","// Styles\nimport './VSkeletonLoader.sass'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { useLocale } from '@/composables/locale'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { PropType, VNode } from 'vue'\n\ntype VSkeletonBone<T> = T | VSkeletonBone<T>[]\n\nexport type VSkeletonBones = VSkeletonBone<VNode>\nexport type VSkeletonLoaderType = keyof typeof rootTypes\n\nexport const rootTypes = {\n  actions: 'button@2',\n  article: 'heading, paragraph',\n  avatar: 'avatar',\n  button: 'button',\n  card: 'image, heading',\n  'card-avatar': 'image, list-item-avatar',\n  chip: 'chip',\n  'date-picker': 'list-item, heading, divider, date-picker-options, date-picker-days, actions',\n  'date-picker-options': 'text, avatar@2',\n  'date-picker-days': 'avatar@28',\n  divider: 'divider',\n  heading: 'heading',\n  image: 'image',\n  'list-item': 'text',\n  'list-item-avatar': 'avatar, text',\n  'list-item-two-line': 'sentences',\n  'list-item-avatar-two-line': 'avatar, sentences',\n  'list-item-three-line': 'paragraph',\n  'list-item-avatar-three-line': 'avatar, paragraph',\n  ossein: 'ossein',\n  paragraph: 'text@3',\n  sentences: 'text@2',\n  subtitle: 'text',\n  table: 'table-heading, table-thead, table-tbody, table-tfoot',\n  'table-heading': 'chip, text',\n  'table-thead': 'heading@6',\n  'table-tbody': 'table-row-divider@6',\n  'table-row-divider': 'table-row, divider',\n  'table-row': 'text@6',\n  'table-tfoot': 'text@2, avatar@2',\n  text: 'text',\n} as const\n\nfunction genBone (type: string, children: VSkeletonBones = []) {\n  return (\n    <div\n      class={[\n        'v-skeleton-loader__bone',\n        `v-skeleton-loader__${type}`,\n      ]}\n    >\n      { children }\n    </div>\n  )\n}\n\nfunction genBones (bone: string) {\n  // e.g. 'text@3'\n  const [type, length] = bone.split('@') as [VSkeletonLoaderType, number]\n\n  // Generate a length array based upon\n  // value after @ in the bone string\n  return Array.from({ length }).map(() => genStructure(type))\n}\n\nfunction genStructure (type?: string): VSkeletonBones {\n  let children: VSkeletonBones = []\n\n  if (!type) return children\n\n  // TODO: figure out a better way to type this\n  const bone = (rootTypes as Record<string, string>)[type]\n\n  // End of recursion, do nothing\n  /* eslint-disable-next-line no-empty, brace-style */\n  if (type === bone) {}\n  // Array of values - e.g. 'heading, paragraph, text@2'\n  else if (type.includes(',')) return mapBones(type)\n  // Array of values - e.g. 'paragraph@4'\n  else if (type.includes('@')) return genBones(type)\n  // Array of values - e.g. 'card@2'\n  else if (bone.includes(',')) children = mapBones(bone)\n  // Array of values - e.g. 'list-item@2'\n  else if (bone.includes('@')) children = genBones(bone)\n  // Single value - e.g. 'card-heading'\n  else if (bone) children.push(genStructure(bone))\n\n  return [genBone(type, children)]\n}\n\nfunction mapBones (bones: string) {\n  // Remove spaces and return array of structures\n  return bones.replace(/\\s/g, '').split(',').map(genStructure)\n}\n\nexport const makeVSkeletonLoaderProps = propsFactory({\n  boilerplate: Boolean,\n  color: String,\n  loading: Boolean,\n  loadingText: {\n    type: String,\n    default: '$vuetify.loading',\n  },\n  type: {\n    type: [String, Array] as PropType<\n      | VSkeletonLoaderType | (string & {})\n      | ReadonlyArray<VSkeletonLoaderType | (string & {})>\n    >,\n    default: 'ossein',\n  },\n\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeThemeProps(),\n}, 'VSkeletonLoader')\n\nexport const VSkeletonLoader = genericComponent()({\n  name: 'VSkeletonLoader',\n\n  props: makeVSkeletonLoaderProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(() => props.color)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { themeClasses } = provideTheme(props)\n    const { t } = useLocale()\n\n    const items = computed(() => genStructure(wrapInArray(props.type).join(',')))\n\n    useRender(() => {\n      const isLoading = !slots.default || props.loading\n      const loadingProps = (props.boilerplate || !isLoading) ? {} : {\n        ariaLive: 'polite',\n        ariaLabel: t(props.loadingText),\n        role: 'alert',\n      }\n\n      return (\n        <div\n          class={[\n            'v-skeleton-loader',\n            {\n              'v-skeleton-loader--boilerplate': props.boilerplate,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            elevationClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            isLoading ? dimensionStyles.value : {},\n          ]}\n          { ...loadingProps }\n        >\n          { isLoading ? items.value : slots.default?.() }\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VSkeletonLoader = InstanceType<typeof VSkeletonLoader>\n","<template>\r\n    <v-row class=\"fill-height my-5\" justify=\"center\">\r\n        <v-card variant=\"text\" class=\"pa-1\" max-width=\"1000\">\r\n            <v-card-title class=\"d-flex align-start pe-2 text-h6\" style=\"width: 1000px;\">\r\n                <v-icon>mdi-view-dashboard</v-icon>\r\n                프로젝트 소개\r\n            </v-card-title>\r\n            <v-row>\r\n                <v-col\r\n                    v-for=\"item in info\"\r\n                    :key=\"item.name\"\r\n                    cols=\"12\" sm=\"6\" md=\"4\"\r\n                >\r\n                    <v-card>\r\n                        <v-skeleton-loader type=\"image, heading, text, actions\">\r\n                            <v-responsive>\r\n                                <v-img max-height=\"124\" min-height=\"124\" :src=\"item.path\" />\r\n                                <v-card-title class=\"d-flex align-center\">\r\n                                    <h5>{{ item.name }}</h5>\r\n                                </v-card-title>\r\n                                <v-card-text>\r\n                                    <div class=\"clamp-2 expand-on-hover\">\r\n                                        {{ item.subject }}\r\n                                    </div>\r\n                                </v-card-text>\r\n                                <v-card-actions class=\"d-flex justify-end\">\r\n                                    <v-btn \r\n                                        variant=\"text\"\r\n                                    >\r\n                                        자세히\r\n                                    </v-btn>\r\n                                </v-card-actions>\r\n                            </v-responsive>\r\n                        </v-skeleton-loader>\r\n                    </v-card>\r\n                </v-col>\r\n            </v-row>\r\n        </v-card>\r\n    </v-row>\r\n</template>\r\n<script>\r\nimport fmresman from '@/assets/project-img/fmresman.png'\r\nimport easystem from '@/assets/project-img/image.png'\r\nimport business from '@/assets/project-img/business.png'\r\nimport no_img from '@/assets/project-img/no-img.png'\r\nimport system from '@/assets/project-img/system.png'\r\nimport toji from '@/assets/project-img/toji.png'\r\nexport default {\r\n    name: \"ProjectListView\",\r\n    data() {\r\n        return {\r\n            info: [\r\n                {   \r\n                    name: \"당진 시설관리 교육문화 스포츠센터\",\r\n                    subject: \"당진시 스포츠센터 및 평생학습 등 시설을 예약하고 결제를 관리하며\"\r\n                     + \" 관리자는 성별, 나이, 반에 따라서 일, 월, 연도 별로 결제 금액 확인이 가능한 플랫폼입니다.\",\r\n                    path: fmresman,\r\n                },\r\n                {   \r\n                    name: \"당진시 EA 시스템\",\r\n                    subject: \"당진시 서버 자원관리를 좀 더 효율적으로 관리하고 서버 담당자, 담당 주무관 등 History를 \"\r\n                    + \"확인하여 유지관리에 도움을 주고자 진행된 사업입니다.\",\r\n                    path: easystem,\r\n                },\r\n                {   \r\n                    name: \"국가기록원\",\r\n                    subject: \"국가기록원에 저장되어야 하는 대학관리 지침 문서들을 웹 에디터를 사용하여 저장 후 \"\r\n                    + \"코드화를 진행하여 사용자에게 문서 내용의 원본을 최대한 그대로 표출해주는 플랫폼입니다.\",\r\n                    path: system,\r\n                },\r\n                {   \r\n                    name: \"돌봄 플랫폼\",\r\n                    subject: \"학교 수업 방과 후 부모의 양육 공백 발생 시 신청 접수하여 각 센터마다 배치되어 \"\r\n                    + \"돌봄 서비스를 받는 플랫폼입니다.\",\r\n                    path: no_img,\r\n                },\r\n                {   \r\n                    name: \"충북 출산육아 수당 시스템\",\r\n                    subject: \"충북 시, 군, 구 지역에서 출산 및 양육 지원에 문서화를 간편하고 전산화하고자 하여 \"\r\n                    + \"진행되었던 프로젝트입니다.\",\r\n                    path: no_img,\r\n                },\r\n                {   \r\n                    name: \"당진 토지관리 통합 플랫폼\",\r\n                    subject: \"처음 시작 시 간단한 토지 지적 정보 입력 확인 플랫폼이였으나 토지 정보에 관련하여 \"\r\n                    + \"프로젝트가 추가되었으며 당진시 토지과 관련 기능을 통합하여 생성한 플랫폼입니다.\",\r\n                    path: toji,\r\n                },\r\n                {   \r\n                    name: \"정선 업무관리 시스템\",\r\n                    subject: \"부서 업무, 부서 업무 하위에 존재하는 개인 업무를 입력하고 각 업무 담당자를 지정하여 \"\r\n                    + \"개인 업무 완료 처리 시 부서 업무 진척률, 부서 업무 친척률에 따라서 해당 부서 업무 진척률을 표기하고 \"\r\n                    + \"이에 따라 군수가 진척률을 확인하기 용이하도록 진행되었던 프로젝트입니다.\",\r\n                    path: business,\r\n                },\r\n            ]\r\n        }\r\n    },\r\n    methods: {\r\n        truncate(text, length = 50) {\r\n            if(!text) return ''\r\n            return text.length > length ? text.substring(0, length) + '...' : text\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.clamp-2 {\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n    overflow: hidden;\r\n}\r\n\r\n.expand-on-hover {\r\n    transition: max-height .2s ease;\r\n    max-height: 4.2rem;\r\n}\r\n.expand-on-hover:hover {\r\n    -webkit-line-clamp: unset;\r\n    max-height: 1000px;\r\n}\r\n</style>","import { render } from \"./ProjectListView.vue?vue&type=template&id=45f28ffd\"\nimport script from \"./ProjectListView.vue?vue&type=script&lang=js\"\nexport * from \"./ProjectListView.vue?vue&type=script&lang=js\"\n\nimport \"./ProjectListView.vue?vue&type=style&index=0&id=45f28ffd&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["breakpointProps","breakpoints","reduce","props","val","type","Boolean","String","Number","default","offsetProps","offsetKey","capitalize","orderProps","orderKey","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","breakpoint","replace","toLowerCase","ALIGN_SELF_VALUES","makeVColProps","propsFactory","cols","alignSelf","validator","str","includes","makeComponentProps","makeTagProps","VCol","genericComponent","name","setup","_ref","slots","classes","computed","classList","forEach","value","push","hasColClasses","some","startsWith","h","tag","class","style","ALIGNMENT","SPACE","makeRowProps","prefix","def","prefixKey","ALIGN_VALUES","alignValidator","alignProps","JUSTIFY_VALUES","justifyValidator","justifyProps","ALIGN_CONTENT_VALUES","alignContentValidator","alignContentProps","align","justify","alignContent","classMap","makeVRowProps","dense","noGutters","VRow","rootTypes","actions","article","avatar","button","card","chip","divider","heading","image","ossein","paragraph","sentences","subtitle","table","text","genBone","children","arguments","length","undefined","_createElementVNode","_normalizeClass","genBones","bone","split","Array","from","map","genStructure","mapBones","bones","makeVSkeletonLoaderProps","boilerplate","color","loading","loadingText","makeDimensionProps","makeElevationProps","makeThemeProps","VSkeletonLoader","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","dimensionStyles","useDimension","elevationClasses","useElevation","themeClasses","provideTheme","t","useLocale","items","wrapInArray","join","useRender","isLoading","loadingProps","ariaLive","ariaLabel","role","_mergeProps","_createBlock","_component_v_row","_createVNode","_component_v_card","variant","_component_v_card_title","_component_v_icon","_cache","_createElementBlock","_Fragment","_renderList","$data","info","item","_component_v_col","key","sm","md","_component_v_skeleton_loader","_component_v_responsive","_component_v_img","src","path","_toDisplayString","_component_v_card_text","_hoisted_1","subject","_component_v_card_actions","_component_v_btn","data","fmresman","easystem","system","no_img","toji","business","methods","truncate","substring","__exports__","render"],"sourceRoot":""}